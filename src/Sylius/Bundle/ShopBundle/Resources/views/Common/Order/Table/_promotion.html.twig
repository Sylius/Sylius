{% set orderPromotionAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::ORDER_PROMOTION_ADJUSTMENT') %}

<td colspan="2" id="promotion-discounts">
    <strong>{{ 'sylius.checkout.finalize.order.promotion_discount'|trans }}</strong>:
    {% set orderPromotions = sylius_aggregate_adjustments(order.getAdjustmentsRecursively(orderPromotionAdjustment)) %}
    {% if not orderPromotions is empty %}
        <ul class="ui relaxed list">
            {% for label, amount in orderPromotions %}
                <li class="item">
                    {{ label }} {% if not amount == 0 %}-{% endif %}{{ (-1 * amount)|sylius_price(order.currencyCode, order.exchangeRate) }}
                </li>
            {% endfor %}
        </ul>
    {% else %}
        <p><small>{{ 'sylius.ui.no_promotion'|trans }}</small></p>
    {% endif %}
</td>
<td colspan="2" id="promotion-total" class="right aligned">
    <strong>{{ 'sylius.ui.promotion_total'|trans }}</strong>:
    {% set orderDiscount = order.adjustmentsTotalRecursively(orderPromotionAdjustment) %}
    {% if not orderDiscount == 0 %}-{% endif %}{{ (-1 * orderDiscount)|sylius_price(order.currencyCode, order.exchangeRate) }}
</td>
