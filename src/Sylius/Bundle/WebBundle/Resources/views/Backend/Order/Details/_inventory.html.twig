{% import 'SyliusUiBundle::labels.html.twig' as labels %}

<div class="tab-pane" id="inventory">

<div class="box box-green">
<h4 class="box-header">{{ 'sylius.order.inventory_tracking'|trans }}</h4>
<table class="table">
    <thead>
        <tr>
            <th>#</th>
            <th>{{ 'sylius.inventory_unit.sku'|trans }}</th>
            <th>{{ 'sylius.inventory_unit.name'|trans }}</th>
            <th>{{ 'sylius.inventory_unit.inventory_state'|trans }}</th>
            <th>{{ 'sylius.inventory_unit.shipping_state'|trans }}</th>
            <th>{{ 'sylius.inventory_unit.created_at'|trans }}</th>
            <th>{{ 'sylius.inventory_unit.updated_at'|trans }}</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        {% for unit in order.inventoryUnits %}
        <tr>
            <td>{{ loop.index }}</td>
            <td>{{ unit.stockable.sku }}</td>
            <td>{{ unit.inventoryName }}</td>
            <td>{{ unit.inventoryState|humanize }}</td>
            <td>{{ unit.shippingState|humanize }}</td>
            <td>{{ unit.createdAt|date }}</td>
            <td>{{ unit.updatedAt|date }}</td>
            <td>
                {% if constant('Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface::STATE_SOLD') == unit.inventoryState and constant('Sylius\\Component\\Shipping\\Model\\ShipmentInterface::STATE_READY') == unit.shippingState %}
                    <form action="{{ path('sylius_backend_inventory_unit_update_state', {'id': unit.id, 'state': constant('Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface::STATE_BACKORDERED')}) }}" method="post">
                        <input type="hidden" name="_method" value="PUT">
                        <button class="btn btn-default" type="submit">
                            <i class="fa fa-share"></i> <span>{{ 'sylius.order.inventory_unit.backorder'|trans }}</span>
                        </button>
                    </form>
                {% elseif constant('Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface::STATE_BACKORDERED') == unit.inventoryState and constant('Sylius\\Component\\Shipping\\Model\\ShipmentInterface::STATE_ONHOLD') == unit.shippingState %}
                    <form action="{{ path('sylius_backend_inventory_unit_update_state', {'id': unit.id, 'state': constant('Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface::STATE_SOLD')}) }}" method="post">
                        <input type="hidden" name="_method" value="PUT">
                        <button class="btn btn-default" type="submit">
                            <i class="fa fa-stats"></i> <span>{{ 'sylius.order.inventory_unit.fulfill'|trans }}</span>
                        </button>
                    </form>
                {% elseif constant('Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface::STATE_SOLD') == unit.inventoryState and constant('Sylius\\Component\\Shipping\\Model\\ShipmentInterface::STATE_SHIPPED') == unit.shippingState %}
                    <form action="{{ path('sylius_backend_inventory_unit_update_state', {'id': unit.id, 'state': constant('Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface::STATE_RETURNED')}) }}" method="post">
                        <input type="hidden" name="_method" value="PUT">
                        <button class="btn btn-default" type="submit">
                            <i class="fa fa-share-alt"></i> <span>{{ 'sylius.order.inventory_unit.return'|trans }}</span>
                        </button>
                    </form>
                {% endif %}
            </td>
        </tr>
        {% else %}
        <tr>
            <td colspan="8">
            {{ alerts.info('sylius.inventory_unit.no_results'|trans) }}
            </td>
        </tr>
        {% endfor %}
    </tbody>
</table>

</div>
