{% macro list(products) %}

{% from 'SyliusWebBundle:Backend/ProductVariant:macros.html.twig' import list as list_variants %}
{% import 'SyliusResourceBundle:Macros:buttons.html.twig' as buttons %}
{% import 'SyliusWebBundle:Backend/Macros:alerts.html.twig' as alerts %}
{% if products|length > 0 %}
<table class="table" id="stockables">
    <thead>
    <tr>
        <th colspan="3">{{ 'sylius.product.header'|trans }}</th>
        <th colspan="3">{{ 'sylius.stock_location.header'|trans }}</th>
    </tr>
    <tr>
        <th>{{ sylius_resource_sort('name', 'sylius.product.name'|trans) }}</th>
        <th>{{ sylius_resource_sort('sku', 'sylius.stockable.sku'|trans) }}</th>
        <th>{{ sylius_resource_sort('onHold', 'sylius.stockable.on_hold'|trans) }}</th>
        <th>{{ sylius_resource_sort('stock_location', 'sylius.stock_location.name'|trans) }}</th>
        <th>{{ sylius_resource_sort('onHand', 'sylius.stockable.on_hand'|trans) }}</th> {# TODO fix sorting #}
    </tr>
    </thead>
    <tbody>
    {% for product in products %}
        {# Calculate the rows the product needs to span #}
        {% set span = 0 %}
        {% for variant in product.variants %}
            {% set items = variant.stockItems|length + 1 %}{# Add at least one for the SKU row #}
            {% set span = span + items %}
        {% endfor %}
        <tr>
        <td rowspan="{{ span }}">
            <a href="{{ path('sylius_backend_product_show', {'id': product.id}) }}" class="btn btn-link">
                <strong>{{ product.name }}</strong>
            </a>
        </td>
        {% for variant in product.variants %}
            <td rowspan="{{ variant.stockItems|length + 1 }}">
                <a href="{{ path('sylius_backend_product_variant_update', {'productId': product.id, 'id': variant.id}) }}"
                   class="btn btn-link">
                    <strong> {{ variant.optionsString }}</strong>
                </a>
            </td>
            <td rowspan="{{ variant.stockItems|length + 1 }}">
                <span class="label label-{{ variant.onHold ? 'warning' : 'success' }}">{{ variant.onHold }}</span>
            </td>
            </tr>
            <tr>
            {% for item in variant.stockItems %}
                <td>{{ item.stockLocation.name }}</td>
                <td><span class="label label-{{ item.inStock ? 'success' : 'danger' }}">{{ item.onHand }}</span>
                </td>
                </tr><tr>
            {% endfor %}
        {% endfor %}
        </tr>
    {% endfor %}
    </tbody>
</table>
{% else %}
{{ alerts.info('sylius.product.no_results'|trans) }}
{% endif %}

{% endmacro %}
