<?xml version="1.0" encoding="UTF-8"?>

<!--

 This file is part of the Sylius package.

 (c) Paweł Jędrzejewski

 For the full copyright and license information, please view the LICENSE
 file that was distributed with this source code.

-->

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
                               http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="sylius.payum.paypal.action.capture_payment_using_express_checkout.class">Sylius\Bundle\PayumBundle\Payum\Paypal\Action\CapturePaymentUsingExpressCheckoutAction</parameter>

        <parameter key="sylius.payum.stripe.action.capture_payment_using_credit_card.class">Sylius\Bundle\PayumBundle\Payum\Stripe\Action\CapturePaymentUsingCreditCardAction</parameter>
        <parameter key="sylius.payum.paypal.action.notify_order.class">Sylius\Bundle\PayumBundle\Payum\Paypal\Action\NotifyOrderAction</parameter>

        <parameter key="sylius.payum.be2bill.action.capture_payment_using_credit_card.class">Sylius\Bundle\PayumBundle\Payum\Be2bill\Action\CapturePaymentUsingCreditCardAction</parameter>
        <parameter key="sylius.payum.be2bill.action.capture_payment_using_be2bill_form.class">Sylius\Bundle\PayumBundle\Payum\Be2bill\Action\CapturePaymentUsingBe2billFormAction</parameter>
        <parameter key="sylius.payum.be2bill.action.notify.class">Sylius\Bundle\PayumBundle\Payum\Be2bill\Action\NotifyAction</parameter>

        <parameter key="sylius.payum.dummy.action.capture_payment.class">Sylius\Bundle\PayumBundle\Payum\Dummy\Action\CapturePaymentAction</parameter>
        <parameter key="sylius.payum.dummy.action.payment_status.class">Sylius\Bundle\PayumBundle\Payum\Dummy\Action\PaymentStatusAction</parameter>

        <parameter key="sylius.payum.action.payment_status.class">Sylius\Bundle\PayumBundle\Payum\Action\PaymentStatusAction</parameter>
        <parameter key="sylius.payum.action.obtain_credit_card.class">Sylius\Bundle\PayumBundle\Payum\Action\ObtainCreditCardAction</parameter>
        <parameter key="sylius.payum.action.execute_same_request_with_payment_details.class">Sylius\Bundle\PayumBundle\Payum\Action\ExecuteSameRequestWithPaymentDetailsAction</parameter>
    </parameters>

    <services>
        <!-- PayPal -->
        <service id="sylius.payum.paypal.action.capture_payment_using_express_checkout" class="%sylius.payum.paypal.action.capture_payment_using_express_checkout.class%" public="false">
            <argument type="service" id="payum.security.token_factory" />

            <tag name="payum.action" factory="paypal_express_checkout_nvp" />
        </service>
        <service id="sylius.payum.paypal.action.notify_order" class="%sylius.payum.paypal.action.notify_order.class%" public="false">
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="sylius.manager.payment" />
            <argument type="service" id="sm.factory" />

            <tag name="payum.action" factory="paypal_express_checkout_nvp" />
        </service>

        <!-- Stripe -->
        <service id="sylius.payum.stripe.action.capture_payment_using_credit_card" class="%sylius.payum.stripe.action.capture_payment_using_credit_card.class%" public="false">
            <tag name="payum.action" factory="omnipay" />
        </service>

        <!-- be2bill -->
        <service id="sylius.payum.be2bill.action.capture_payment_using_credit_card" class="%sylius.payum.be2bill.action.capture_payment_using_credit_card.class%" public="false">
            <call method="setRequest">
                <argument type="service" id="request" on-invalid="null" strict="false" />
            </call>

            <tag name="payum.action" factory="be2bill" />
        </service>
        <service id="sylius.payum.be2bill.action.capture_payment_using_be2bill_form" class="%sylius.payum.be2bill.action.capture_payment_using_be2bill_form.class%" public="false">
            <call method="setRequest">
                <argument type="service" id="request" on-invalid="null" strict="false" />
            </call>

            <tag name="payum.action" factory="be2bill" />
        </service>
        <service id="sylius.payum.be2bill.action.notify" class="%sylius.payum.be2bill.action.notify.class%" public="false">
            <argument type="service" id="payum.context.be2bill.api" />
            <argument type="service" id="sylius.repository.payment" />
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="sylius.manager.payment" />
            <argument type="service" id="sm.factory" />
            <argument>id</argument>

            <tag name="payum.action" factory="be2bill" />
        </service>

        <!-- Payum -->
        <service id="sylius.payum.action.payment_status" class="%sylius.payum.action.payment_status.class%" public="false">
            <tag name="payum.action" all="true" />
        </service>
        <service id="sylius.payum.action.execute_same_request_with_payment_details" class="%sylius.payum.action.execute_same_request_with_payment_details.class%" public="false">
            <tag name="payum.action" all="true" />
        </service>
        <service id="sylius.payum.action.obtain_credit_card" class="%sylius.payum.action.obtain_credit_card.class%" public="false">
            <argument type="service" id="form.factory" />
            <argument type="service" id="templating" />
            <call method="setRequest">
                <argument type="service" id="request" on-invalid="null" strict="false" />
            </call>

            <tag name="payum.action" all="true" />
        </service>

        <!-- Dummy -->
        <service id="sylius.payum.dummy.action.capture_payment" class="%sylius.payum.dummy.action.capture_payment.class%"  public="false" />
        <service id="sylius.payum.dummy.action.payment_status" class="%sylius.payum.dummy.action.payment_status.class%"  public="false" />
    </services>

</container>
