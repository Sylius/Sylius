<?xml version="1.0" encoding="UTF-8"?>

<!--

 This file is part of the Sylius package.

 (c) Paweł Jędrzejewski

 For the full copyright and license information, please view the LICENSE
 file that was distributed with this source code.

-->

<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="sylius.listener.cart_blamer" class="Sylius\Bundle\CoreBundle\EventListener\CartBlamerListener">
            <argument type="service" id="sylius.manager.cart" />
            <argument type="service" id="sylius.context.cart" />
            <tag name="kernel.event_listener" event="sylius.user.security.implicit_login" method="onImplicitLogin" />
            <tag name="kernel.event_listener" event="security.interactive_login" method="onInteractiveLogin" />
        </service>
        <service id="sylius.listener.order_state" class="Sylius\Bundle\CoreBundle\EventListener\OrderStateListener">
            <argument type="service" id="sylius.order_processing.state_resolver" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="resolveOrderStates" priority="-100" />
            <tag name="kernel.event_listener" event="winzou.state_machine.post_transition" method="resolveOrderStatesOnTransition" priority="-100" />
        </service>
        <service id="sylius.listener.order_payment" class="Sylius\Bundle\CoreBundle\EventListener\OrderPaymentListener">
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="updateOrderPayment" />
        </service>
        <service id="sylius.listener.checkout_addressing" class="Sylius\Bundle\CoreBundle\EventListener\CheckoutAddressingListener">
            <tag name="kernel.event_listener" event="sylius.checkout.addressing.pre_complete" method="setCustomerAddressing" />
        </service>
        <service id="sylius.listener.insufficient_stock_exception" class="Sylius\Bundle\CoreBundle\EventListener\InsufficientStockExceptionListener">
            <argument type="service" id="router" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <argument>sylius_cart_summary</argument>
            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" />
        </service>
        <service id="sylius.listener.channel" class="Sylius\Bundle\CoreBundle\EventListener\ChannelDeletionListener">
            <argument type="service" id="sylius.repository.channel" />
            <tag name="kernel.event_listener" event="sylius.channel.pre_delete" method="onChannelPreDelete" />
        </service>
        <service id="sylius.listener.image_upload" class="Sylius\Bundle\CoreBundle\EventListener\ImageUploadListener">
            <argument type="service" id="sylius.image_uploader" />
            <argument type="service" id="sylius.variant_resolver.default" />
            <tag name="kernel.event_listener" event="sylius.product.pre_create" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product.pre_update" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product_variant.pre_create" method="uploadProductVariantImage" />
            <tag name="kernel.event_listener" event="sylius.product_variant.pre_update" method="uploadProductVariantImage" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_create" method="uploadTaxonImage" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_update" method="uploadTaxonImage" />
        </service>

        <service id="sylius.listener.order_recalculation" class="Sylius\Bundle\CoreBundle\EventListener\OrderRecalculationListener">
            <argument type="service" id="sylius.order_processing.order_processor" />
            <tag name="kernel.event_listener" event="sylius.cart_change" method="recalculateOrder" />
        </service>
        <service id="sylius.listener.user_cart_recalculation" class="Sylius\Bundle\CoreBundle\EventListener\UserCartRecalculationListener">
            <argument type="service" id="sylius.context.cart" />
            <argument type="service" id="sylius.order_processing.order_processor" />
            <tag name="kernel.event_listener" event="sylius.user.security.implicit_login" method="recalculateCartWhileLogin" />
            <tag name="kernel.event_listener" event="security.interactive_login" method="recalculateCartWhileLogin" />
        </service>
        <service id="sylius.listener.default_username" class="Sylius\Bundle\CoreBundle\EventListener\DefaultUsernameORMListener">
            <tag name="doctrine.event_listener" event="onFlush" />
        </service>
        <service id="sylius.listener.user_auto_login" class="Sylius\Bundle\CoreBundle\EventListener\UserAutoLoginListener">
            <argument type="service" id="sylius.security.user_login" />
            <tag name="kernel.event_listener" event="sylius.customer.post_register" method="login" />
        </service>
        <service id="sylius.listener.canonicalizer" class="Sylius\Bundle\CoreBundle\EventListener\CanonicalizerListener">
            <argument type="service" id="sylius.user.canonicalizer" />
            <tag name="doctrine.event_listener" event="prePersist" />
            <tag name="doctrine.event_listener" event="preUpdate" />
        </service>
        <service id="sylius.listener.user_registration" class="Sylius\Bundle\CoreBundle\EventListener\UserRegistrationListener">
            <argument type="service" id="sylius.manager.shop_user" />
            <argument type="service" id="sylius.shop_user.generator.email_verification_token" />
            <argument type="service" id="event_dispatcher" />
            <tag name="kernel.event_listener" event="sylius.customer.post_register" method="sendVerificationEmail" />
        </service>
        <service id="sylius.listener.password_updater" class="Sylius\Bundle\CoreBundle\EventListener\PasswordUpdaterListener">
            <argument type="service" id="sylius.user.password_updater" />
            <tag name="kernel.event_listener" event="sylius.user.pre_password_reset" method="genericEventUpdater" />
            <tag name="kernel.event_listener" event="sylius.user.pre_password_change" method="genericEventUpdater" />
            <tag name="kernel.event_listener" event="sylius.customer.pre_update" method="customerUpdateEvent" />
            <tag name="doctrine.event_listener" event="prePersist" />
            <tag name="doctrine.event_listener" event="preUpdate" />
        </service>
    </services>
</container>
