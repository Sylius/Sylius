<?xml version="1.0" encoding="UTF-8"?>

<!--

 This file is part of the Sylius package.

 (c) Paweł Jędrzejewski

 For the full copyright and license information, please view the LICENSE
 file that was distributed with this source code.

-->

<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <defaults public="true" />

        <service id="sylius.listener.cart_blamer" class="Sylius\Bundle\CoreBundle\EventListener\CartBlamerListener">
            <argument type="service" id="sylius.manager.order" />
            <argument type="service" id="sylius.context.cart" />
            <tag name="kernel.event_listener" event="sylius.user.security.implicit_login" method="onImplicitLogin" />
            <tag name="kernel.event_listener" event="security.interactive_login" method="onInteractiveLogin" />
        </service>
        <service id="sylius.listener.channel" class="Sylius\Bundle\CoreBundle\EventListener\ChannelDeletionListener">
            <argument type="service" id="sylius.repository.channel" />
            <tag name="kernel.event_listener" event="sylius.channel.pre_delete" method="onChannelPreDelete" />
        </service>
        <service id="sylius.listener.images_upload" class="Sylius\Bundle\CoreBundle\EventListener\ImagesUploadListener">
            <argument type="service" id="sylius.image_uploader" />
            <tag name="kernel.event_listener" event="sylius.product.pre_create" method="uploadImages" />
            <tag name="kernel.event_listener" event="sylius.product.pre_update" method="uploadImages" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_create" method="uploadImages" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_update" method="uploadImages" />
        </service>
        <service id="sylius.listener.images_remove" class="Sylius\Bundle\CoreBundle\EventListener\ImagesRemoveListener">
            <argument type="service" id="sylius.image_uploader" />
            <argument type="service" id="liip_imagine.cache.manager" />
            <argument type="service" id="liip_imagine.filter.manager" />
            <tag name="doctrine.event_listener" event="onFlush" lazy="true" />
            <tag name="doctrine.event_listener" event="postFlush" lazy="true" />
        </service>
        <service id="sylius.listener.order_recalculation" class="Sylius\Bundle\CoreBundle\EventListener\OrderRecalculationListener">
            <argument type="service" id="sylius.order_processing.order_processor" />
            <tag name="kernel.event_listener" event="sylius.cart_change" method="recalculateOrder" />
        </service>
        <service id="sylius.listener.user_cart_recalculation" class="Sylius\Bundle\CoreBundle\EventListener\UserCartRecalculationListener">
            <argument type="service" id="sylius.context.cart" />
            <argument type="service" id="sylius.order_processing.order_processor" />
            <tag name="kernel.event_listener" event="sylius.user.security.implicit_login" method="recalculateCartWhileLogin" />
            <tag name="kernel.event_listener" event="security.interactive_login" method="recalculateCartWhileLogin" />
        </service>
        <service id="sylius.listener.default_username" class="Sylius\Bundle\CoreBundle\EventListener\DefaultUsernameORMListener">
            <tag name="doctrine.event_listener" event="onFlush" lazy="true" />
        </service>
        <service id="sylius.listener.canonicalizer" class="Sylius\Bundle\CoreBundle\EventListener\CanonicalizerListener">
            <argument type="service" id="sylius.canonicalizer" />
            <tag name="doctrine.event_listener" event="prePersist" lazy="true" />
            <tag name="doctrine.event_listener" event="preUpdate" lazy="true" />
        </service>
        <service id="sylius.listener.password_updater" class="Sylius\Bundle\CoreBundle\EventListener\PasswordUpdaterListener">
            <argument type="service" id="sylius.security.password_updater" />
            <tag name="kernel.event_listener" event="sylius.user.pre_password_reset" method="genericEventUpdater" />
            <tag name="kernel.event_listener" event="sylius.user.pre_password_change" method="genericEventUpdater" />
            <tag name="kernel.event_listener" event="sylius.admin_user.pre_update" method="genericEventUpdater" />
            <tag name="kernel.event_listener" event="sylius.customer.pre_update" method="customerUpdateEvent" />
            <tag name="doctrine.event_listener" event="prePersist" lazy="true" />
            <tag name="doctrine.event_listener" event="preUpdate" lazy="true" />
        </service>
        <service id="sylius.translator.listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
            <argument type="service" id="translator" />
            <argument type="service" id="request_stack" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="2" />
        </service>
        <service id="sylius.listener.review_create" class="Sylius\Bundle\CoreBundle\EventListener\ReviewCreateListener">
            <argument type="service" id="sylius.context.customer" />
            <tag name="kernel.event_listener" event="sylius.product_review.pre_create" method="ensureReviewHasAuthor" />
        </service>

        <service id="sylius.listener.locking" class="Sylius\Bundle\CoreBundle\EventListener\LockingListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <tag name="kernel.event_listener" event="sylius.product_variant.initialize_update" method="lock" />
        </service>

        <service id="sylius.listener.simple_product_locking" class="Sylius\Bundle\CoreBundle\EventListener\SimpleProductLockingListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sylius.product_variant_resolver.default" />
            <tag name="kernel.event_listener" event="sylius.product.initialize_update" method="lock" />
        </service>
    </services>
</container>
