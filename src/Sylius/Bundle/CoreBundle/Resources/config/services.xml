<?xml version="1.0" encoding="UTF-8"?>

<!--

 This file is part of the Sylius package.

 (c) Paweł Jędrzejewski

 For the full copyright and license information, please view the LICENSE
 file that was distributed with this source code.

-->

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
                               http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="sylius.settings_schema.general.class">Sylius\Bundle\CoreBundle\Settings\GeneralSettingsSchema</parameter>
        <parameter key="sylius.settings_schema.taxation.class">Sylius\Bundle\CoreBundle\Settings\TaxationSettingsSchema</parameter>
        <parameter key="sylius.settings_schema.security.class">Sylius\Bundle\CoreBundle\Settings\SecuritySettingsSchema</parameter>

        <parameter key="sylius.context.currency.class">Sylius\Bundle\CoreBundle\Context\CurrencyContext</parameter>

        <parameter key="sylius.checkout_scenario.class">Sylius\Bundle\CoreBundle\Checkout\CheckoutProcessScenario</parameter>
        <parameter key="sylius.checkout_step.security.class">Sylius\Bundle\CoreBundle\Checkout\Step\SecurityStep</parameter>
        <parameter key="sylius.checkout_step.addressing.class">Sylius\Bundle\CoreBundle\Checkout\Step\AddressingStep</parameter>
        <parameter key="sylius.checkout_step.shipping.class">Sylius\Bundle\CoreBundle\Checkout\Step\ShippingStep</parameter>
        <parameter key="sylius.checkout_step.payment.class">Sylius\Bundle\CoreBundle\Checkout\Step\PaymentStep</parameter>
        <parameter key="sylius.checkout_step.purchase.class">Sylius\Bundle\CoreBundle\Checkout\Step\PurchaseStep</parameter>
        <parameter key="sylius.checkout_step.finalize.class">Sylius\Bundle\CoreBundle\Checkout\Step\FinalizeStep</parameter>

        <parameter key="sylius.order_processing.inventory_handler.class">Sylius\Component\Core\OrderProcessing\InventoryHandler</parameter>
        <parameter key="sylius.order_processing.state_resolver.class">Sylius\Component\Core\OrderProcessing\StateResolver</parameter>
        <parameter key="sylius.order_processing.shipment_factory.class">Sylius\Component\Core\OrderProcessing\ShipmentFactory</parameter>
        <parameter key="sylius.order_processing.payment_processor.class">Sylius\Component\Core\OrderProcessing\PaymentProcessor</parameter>
        <parameter key="sylius.order_processing.payment_charges_processor.class">Sylius\Component\Core\OrderProcessing\PaymentChargesProcessor</parameter>
        <parameter key="sylius.order_processing.shipping_processor.class">Sylius\Component\Core\OrderProcessing\ShippingChargesProcessor</parameter>
        <parameter key="sylius.order_processing.taxation_processor.class">Sylius\Bundle\CoreBundle\OrderProcessing\TaxationProcessor</parameter>

        <parameter key="sylius.listener.cart_blamer.class">Sylius\Bundle\CoreBundle\EventListener\CartBlamerListener</parameter>
        <parameter key="sylius.listener.order_currency.class">Sylius\Bundle\CoreBundle\EventListener\OrderCurrencyListener</parameter>
        <parameter key="sylius.listener.order_inventory.class">Sylius\Bundle\CoreBundle\EventListener\OrderInventoryListener</parameter>
        <parameter key="sylius.listener.order_item_inventory.class">Sylius\Bundle\CoreBundle\EventListener\OrderItemInventoryListener</parameter>
        <parameter key="sylius.listener.order_state.class">Sylius\Bundle\CoreBundle\EventListener\OrderStateListener</parameter>
        <parameter key="sylius.listener.order_payment.class">Sylius\Bundle\CoreBundle\EventListener\OrderPaymentListener</parameter>
        <parameter key="sylius.listener.order_channel.class">Sylius\Bundle\CoreBundle\EventListener\OrderChannelListener</parameter>
        <parameter key="sylius.listener.order_promotion.class">Sylius\Bundle\CoreBundle\EventListener\OrderPromotionListener</parameter>
        <parameter key="sylius.listener.order_pricing.class">Sylius\Bundle\CoreBundle\EventListener\OrderPricingListener</parameter>
        <parameter key="sylius.listener.order_shipping.class">Sylius\Bundle\CoreBundle\EventListener\OrderShippingListener</parameter>
        <parameter key="sylius.listener.order_taxation.class">Sylius\Bundle\CoreBundle\EventListener\OrderTaxationListener</parameter>
        <parameter key="sylius.listener.restricted_zone.class">Sylius\Bundle\CoreBundle\EventListener\RestrictedZoneListener</parameter>
        <parameter key="sylius.listener.purchase.class">Sylius\Bundle\CoreBundle\EventListener\PurchaseListener</parameter>
        <parameter key="sylius.listener.checkout_addressing.class">Sylius\Bundle\CoreBundle\EventListener\CheckoutAddressingListener</parameter>
        <parameter key="sylius.listener.insufficient_stock_exception.class">Sylius\Bundle\CoreBundle\EventListener\InsufficientStockExceptionListener</parameter>
        <parameter key="sylius.listener.image_upload.class">Sylius\Bundle\CoreBundle\EventListener\ImageUploadListener</parameter>

        <parameter key="sylius.promotion_processor.class">Sylius\Bundle\CoreBundle\OrderProcessing\PromotionProcessor</parameter>
        <parameter key="sylius.promotion_rule_checker.nth_order.class">Sylius\Component\Core\Promotion\Checker\NthOrderRuleChecker</parameter>
        <parameter key="sylius.promotion_rule_checker.customer_loyalty.class">Sylius\Component\Core\Promotion\Checker\CustomerLoyaltyRuleChecker</parameter>
        <parameter key="sylius.promotion_rule_checker.shipping_country.class">Sylius\Component\Core\Promotion\Checker\ShippingCountryRuleChecker</parameter>
        <parameter key="sylius.promotion_rule_checker.taxonomy.class">Sylius\Component\Core\Promotion\Checker\TaxonomyRuleChecker</parameter>
        <parameter key="sylius.promotion_rule_checker.contains_product.class">Sylius\Component\Core\Promotion\Checker\ContainsProductRuleChecker</parameter>
        <parameter key="sylius.promotion_rule_checker.customer_group.class">Sylius\Component\Core\Promotion\Checker\CustomerGroupRuleChecker</parameter>
        <parameter key="sylius.promotion_action.fixed_discount.class">Sylius\Component\Core\Promotion\Action\FixedDiscountAction</parameter>
        <parameter key="sylius.promotion_action.percentage_discount.class">Sylius\Component\Core\Promotion\Action\PercentageDiscountAction</parameter>
        <parameter key="sylius.promotion_action.shipping_discount.class">Sylius\Component\Core\Promotion\Action\ShippingDiscountAction</parameter>
        <parameter key="sylius.promotion_action.add_product.class">Sylius\Component\Core\Promotion\Action\AddProductAction</parameter>
        <parameter key="sylius.promotion_eligibility_checker.class">Sylius\Component\Core\Promotion\Checker\PromotionEligibilityChecker</parameter>
        <parameter key="sylius.order.purger.class">Sylius\Bundle\CoreBundle\Purger\ExpiredOrdersPurger</parameter>
        <parameter key="sylius.order.releaser.class">Sylius\Bundle\CoreBundle\Releaser\ExpiredOrdersReleaser</parameter>
        <parameter key="sylius.image_uploader.class">Sylius\Component\Core\Uploader\ImageUploader</parameter>
        <parameter key="sylius.currency_context.class">Sylius\Bundle\CoreBundle\Context\CurrencyContext</parameter>
        <parameter key="sylius.currency_provider.class">Sylius\Component\Core\Currency\ChannelAwareCurrencyProvider</parameter>
        <parameter key="sylius.context.channel.class">Sylius\Bundle\CoreBundle\Context\ChannelContext</parameter>
        <parameter key="sylius.channel_aware_locale_provider.class">Sylius\Bundle\CoreBundle\Locale\ChannelAwareLocaleProvider</parameter>
        <parameter key="sylius.cart_item_resolver.default.class">Sylius\Bundle\CoreBundle\Cart\ItemResolver</parameter>
        <parameter key="sylius.checker.restricted_zone.class">Sylius\Bundle\CoreBundle\Checker\RestrictedZoneChecker</parameter>
        <parameter key="sylius.price_calculator.channel_based.class">Sylius\Component\Core\Pricing\ChannelBasedCalculator</parameter>
        <parameter key="sylius.price_calculator.group_based.class">Sylius\Component\Core\Pricing\GroupBasedCalculator</parameter>
        <parameter key="sylius.price_calculator.zone_based.class">Sylius\Component\Core\Pricing\ZoneBasedCalculator</parameter>
        <parameter key="sylius.data_collector.class">Sylius\Bundle\CoreBundle\DataCollector\SyliusDataCollector</parameter>
        <parameter key="sylius.dynamic_router.class">Symfony\Cmf\Component\Routing\DynamicRouter</parameter>
        <parameter key="sylius.generator.class">Sylius\Bundle\CoreBundle\Routing\SyliusAwareGenerator</parameter>
        <parameter key="sylius.route_provider.class">Sylius\Bundle\CoreBundle\Routing\RouteProvider</parameter>
        <parameter key="sylius.a2lix_locale_provider.class">Sylius\Bundle\CoreBundle\Locale\A2lixTranslationLocaleProvider</parameter>

        <parameter key="sylius.export.user_reader.class">Sylius\Bundle\CoreBundle\Export\Reader\ORM\UserReader</parameter>
        <parameter key="sylius.export.product_reader.class">Sylius\Bundle\CoreBundle\Export\Reader\ORM\ProductReader</parameter>

        <parameter key="sylius.callback.complete_order.class">Sylius\Bundle\CoreBundle\StateMachineCallback\CompleteOrderCallback</parameter>

        <!-- Data fetchers -->
        <parameter key="sylius.registry.report.class">Sylius\Component\Registry\ServiceRegistry</parameter>
        <parameter key="sylius.form.type.data_fetcher.number_of_orders.class">Sylius\Bundle\CoreBundle\Form\Type\DataFetcher\NumberOfOrdersType</parameter>
        <parameter key="sylius.form.type.data_fetcher.sales_total.class">Sylius\Bundle\CoreBundle\Form\Type\DataFetcher\SalesTotalType</parameter>
        <parameter key="sylius.form.type.data_fetcher.user_registration.class">Sylius\Bundle\CoreBundle\Form\Type\DataFetcher\UserRegistrationType</parameter>
        <parameter key="sylius.form.type.data_fetcher_choice.class">Sylius\Bundle\CoreBundle\Form\Type\DataFetcher\DataFetcherChoiceType</parameter>
        <parameter key="sylius.report.data_fetcher.class">Sylius\Component\Report\DataFetcher\DelegatingDataFetcher</parameter>

        <parameter key="sylius.authorization_checker.toggleable.class">Sylius\Bundle\CoreBundle\Authorization\ToggleableAuthorizationChecker</parameter>
        <parameter key="sylius.translation.locale_provider.contextual.class">Sylius\Bundle\CoreBundle\Locale\TranslationLocaleProvider</parameter>
    </parameters>

    <services>
        <!-- settings schemas -->
        <service id="sylius.settings_schema.general" class="%sylius.settings_schema.general.class%">
            <argument type="collection">
                <argument key="currency">%sylius.money.currency%</argument>
                <argument key="locale">%sylius.locale%</argument>
            </argument>
            <tag name="sylius.settings_schema" namespace="sylius_general" />
        </service>
        <service id="sylius.settings_schema.taxation" class="%sylius.settings_schema.taxation.class%">
            <argument type="service" id="sylius.repository.zone" />
            <tag name="sylius.settings_schema" namespace="sylius_taxation" />
        </service>
        <service id="sylius.settings_schema.security" class="%sylius.settings_schema.security.class%">
            <tag name="sylius.settings_schema" namespace="sylius_security" />
        </service>

        <!-- cart -->
        <service id="sylius.cart_item_resolver.default" class="%sylius.cart_item_resolver.default.class%">
            <argument type="service" id="sylius.cart_provider" />
            <argument type="service" id="sylius.repository.product" />
            <argument type="service" id="form.factory" />
            <argument type="service" id="sylius.availability_checker" />
            <argument type="service" id="sylius.checker.restricted_zone" />
            <argument type="service" id="sylius.price_calculator" />
            <argument type="service" id="sylius.context.channel" />
        </service>

        <!-- checker -->
        <service id="sylius.checker.restricted_zone" class="%sylius.checker.restricted_zone.class%">
            <argument type="service" id="sylius.context.customer" />
            <argument type="service" id="sylius.zone_matcher" />
        </service>

        <!-- checkout -->
        <service id="sylius.checkout_scenario" class="%sylius.checkout_scenario.class%">
            <argument type="service" id="sylius.cart_provider" />
            <tag name="sylius.process.scenario" alias="sylius_checkout" />
        </service>

        <service id="sylius.checkout_step.security" class="%sylius.checkout_step.security.class%">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="sylius.process.step" alias="sylius_checkout_security" />
        </service>
        <service id="sylius.checkout_step.addressing" class="%sylius.checkout_step.addressing.class%">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="sylius.process.step" alias="sylius_checkout_addressing" />
        </service>
        <service id="sylius.checkout_step.shipping" class="%sylius.checkout_step.shipping.class%">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="sylius.process.step" alias="sylius_checkout_shipping" />
        </service>
        <service id="sylius.checkout_step.payment" class="%sylius.checkout_step.payment.class%">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="sylius.process.step" alias="sylius_checkout_payment" />
        </service>
        <service id="sylius.checkout_step.purchase" class="%sylius.checkout_step.purchase.class%">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="sylius.process.step" alias="sylius_checkout_purchase" />
        </service>
        <service id="sylius.checkout_step.finalize" class="%sylius.checkout_step.finalize.class%">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="sylius.process.step" alias="sylius_checkout_finalize" />
        </service>

        <!-- order processing -->
        <service id="sylius.order_processing.inventory_handler" class="%sylius.order_processing.inventory_handler.class%">
            <argument type="service" id="sylius.inventory_operator" />
            <argument type="service" id="sylius.inventory_unit_factory" />
            <argument type="service" id="sm.factory" />
        </service>
        <service id="sylius.order_processing.state_resolver" class="%sylius.order_processing.state_resolver.class%" />
        <service id="sylius.order_processing.shipment_factory" class="%sylius.order_processing.shipment_factory.class%">
            <argument type="service" id="sylius.repository.shipment" />
        </service>
        <service id="sylius.order_processing.payment_processor" class="%sylius.order_processing.payment_processor.class%">
            <argument type="service" id="sylius.repository.payment" />
            <argument type="service" id="sylius.manager.payment" />
        </service>
        <service id="sylius.order_processing.payment_charges_processor" class="%sylius.order_processing.payment_charges_processor.class%">
            <argument type="service" id="sylius.repository.adjustment" />
            <argument type="service" id="sylius.payment.delegating_fee_calculator" />
        </service>
        <service id="sylius.order_processing.taxation_processor" class="%sylius.order_processing.taxation_processor.class%">
            <argument type="service" id="sylius.repository.adjustment" />
            <argument type="service" id="sylius.tax_calculator" />
            <argument type="service" id="sylius.tax_rate_resolver" />
            <argument type="service" id="sylius.zone_matcher" />
            <argument type="service">
                <service
                        factory-service="sylius.settings.manager"
                        factory-method="loadSettings"
                        class="Sylius\Bundle\SettingsBundle\Model\Settings"
                        >
                    <argument>sylius_taxation</argument>
                </service>
            </argument>
        </service>
        <service id="sylius.order_processing.shipping_processor" class="%sylius.order_processing.shipping_processor.class%">
            <argument type="service" id="sylius.repository.adjustment" />
            <argument type="service" id="sylius.shipping_calculator" />
        </service>

        <service id="sylius.order.purger" class="%sylius.order.purger.class%">
            <argument type="service" id="sylius.manager.order" />
            <argument type="service" id="sylius.repository.order" />
            <argument type="service" id="sm.factory" />
        </service>

        <service id="sylius.order.releaser" class="%sylius.order.releaser.class%">
            <argument type="service" id="sylius.manager.order" />
            <argument type="service" id="sylius.repository.order" />
            <argument type="service" id="sm.factory" />
        </service>

        <!-- listeners -->
        <service id="sylius.listener.cart_blamer" class="%sylius.listener.cart_blamer.class%">
            <argument type="service" id="sylius.manager.cart" />
            <argument type="service" id="sylius.cart_provider" />
            <tag name="kernel.event_listener" event="sylius.user.security.implicit_login" method="blame" />
            <tag name="kernel.event_listener" event="security.interactive_login" method="interactiveBlame" />
        </service>
        <service id="sylius.listener.order_inventory" class="%sylius.listener.order_inventory.class%">
            <argument type="service" id="sylius.order_processing.inventory_handler" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="holdInventoryUnits" />
            <tag name="kernel.event_listener" event="sylius.order_item.pre_create" method="processInventoryUnits" />
            <tag name="kernel.event_listener" event="sylius.order_item.pre_update" method="processInventoryUnits" />
            <tag name="kernel.event_listener" event="sylius.order_item.pre_create" method="resolveInventoryState" priority="-100" />
            <tag name="kernel.event_listener" event="sylius.order_item.pre_update" method="resolveInventoryState" priority="-100" />
        </service>
        <service id="sylius.listener.order_item_inventory" class="%sylius.listener.order_item_inventory.class%">
            <argument type="service" id="event_dispatcher" />
            <tag name="doctrine.event_listener" event="prePersist" />
            <tag name="doctrine.event_listener" event="onFlush" />
        </service>
        <service id="sylius.listener.order_pricing" class="%sylius.listener.order_pricing.class%">
            <argument type="service" id="sylius.price_calculator" />
            <tag name="kernel.event_listener" event="sylius.cart_change" method="recalculatePrices" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.initialize" method="recalculatePrices" />
            <tag name="kernel.event_listener" event="sylius.checkout.security.pre_complete" method="recalculatePrices" />
        </service>
        <service id="sylius.listener.order_state" class="%sylius.listener.order_state.class%">
            <argument type="service" id="sylius.order_processing.state_resolver" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="resolveOrderStates" priority="-100" />
            <tag name="kernel.event_listener" event="sylius.checkout.purchase.pre_complete" method="resolveOrderStates" priority="-100" />
            <tag name="kernel.event_listener" event="winzou.state_machine.post_transition" method="resolveOrderStatesOnTransition" priority="-100" />
        </service>
        <service id="sylius.listener.order_taxation" class="%sylius.listener.order_taxation.class%">
            <argument type="service" id="sylius.order_processing.taxation_processor" />
            <tag name="kernel.event_listener" event="sylius.cart_change" method="applyTaxes" />
            <tag name="kernel.event_listener" event="sylius.checkout.security.pre_complete" method="applyTaxes" />
            <tag name="kernel.event_listener" event="sylius.checkout.addressing.pre_complete" method="applyTaxes" />
        </service>
        <service id="sylius.listener.order_shipping" class="%sylius.listener.order_shipping.class%">
            <argument type="service" id="sylius.order_processing.shipment_factory" />
            <argument type="service" id="sylius.processor.shipment_processor" />
            <argument type="service" id="sylius.order_processing.shipping_processor" />
            <tag name="kernel.event_listener" event="sylius.checkout.shipping.initialize" method="processOrderShipments" />
            <tag name="kernel.event_listener" event="sylius.checkout.shipping.pre_complete" method="processOrderShippingCharges" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="updateShipmentStatesOnhold" />
        </service>
        <service id="sylius.listener.order_payment" class="%sylius.listener.order_payment.class%">
            <argument type="service" id="sylius.order_processing.payment_processor" />
            <argument type="service" id="sylius.order_processing.payment_charges_processor" />
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="sm.factory" />
            <tag name="kernel.event_listener" event="sylius.checkout.payment.initialize" method="createOrderPayment" />
            <tag name="kernel.event_listener" event="sylius.checkout.payment.pre_complete" method="processOrderPaymentCharges" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="updateOrderPayment" />
        </service>
        <service id="sylius.listener.order_channel" class="%sylius.listener.order_channel.class%">
            <argument type="service" id="sylius.context.channel" />
            <tag name="kernel.event_listener" event="sylius.cart_change" method="processOrderChannel" />
        </service>
        <service id="sylius.listener.order_promotion" class="%sylius.listener.order_promotion.class%">
            <argument type="service" id="sylius.promotion_processor" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <argument>%sylius.promotion.item_based%</argument>
            <tag name="kernel.event_listener" event="sylius.cart_change" method="processOrderPromotion" priority="-50" />
            <tag name="kernel.event_listener" event="sylius.checkout.addressing.pre_complete" method="processOrderPromotion" />
            <tag name="kernel.event_listener" event="sylius.checkout.shipping.pre_complete" method="processOrderPromotion" />
            <tag name="kernel.event_listener" event="sylius.promotion.coupon_invalid" method="handleCouponPromotion" />
            <tag name="kernel.event_listener" event="sylius.promotion.coupon_eligible" method="handleCouponPromotion" />
            <tag name="kernel.event_listener" event="sylius.promotion.coupon_not_eligible" method="handleCouponPromotion" />
        </service>
        <service id="sylius.listener.order_currency" class="%sylius.listener.order_currency.class%">
            <argument type="service" id="sylius.context.currency" />
            <tag name="kernel.event_listener" event="sylius.cart.initialize" method="processOrderCurrency" />
        </service>
        <service id="sylius.listener.customer_aware" class="%sylius.listener.customer_aware.class%">
            <argument type="service" id="sylius.context.customer" />
            <tag name="kernel.event_listener" event="sylius.checkout.security.pre_complete" method="setCustomer" priority="100" />
            <tag name="kernel.event_listener" event="sylius.cart.initialize" method="setCustomer" />
        </service>
        <service id="sylius.listener.restricted_zone" class="%sylius.listener.restricted_zone.class%">
            <argument type="service" id="sylius.checker.restricted_zone" />
            <argument type="service" id="sylius.cart_provider" />
            <argument type="service" id="sylius.manager.cart" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <tag name="kernel.event_listener" event="sylius.address.post_update" method="handleRestrictedZone" />
            <tag name="kernel.event_listener" event="sylius.checkout.addressing.complete" method="handleRestrictedZone" />
        </service>
        <service id="sylius.listener.purchase" class="%sylius.listener.purchase.class%">
            <argument type="service" id="sylius.cart_provider" />
            <argument type="service" id="router" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <argument>sylius_checkout_payment</argument>
            <tag name="kernel.event_listener" event="sylius.checkout.purchase.complete" method="abandonCart" />
            <tag name="kernel.event_listener" event="sylius.checkout.purchase.complete" method="addFlash" />
        </service>
        <service id="sylius.listener.checkout_addressing" class="%sylius.listener.checkout_addressing.class%">
            <tag name="kernel.event_listener" event="sylius.checkout.addressing.pre_complete" method="setCustomerAddressing" />
        </service>
        <service id="sylius.listener.insufficient_stock_exception" class="%sylius.listener.insufficient_stock_exception.class%">
            <argument type="service" id="router" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <argument>sylius_cart_summary</argument>
            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" />
        </service>
        <service id="sylius.listener.image_upload" class="%sylius.listener.image_upload.class%">
            <argument type="service" id="sylius.image_uploader" />
            <tag name="kernel.event_listener" event="sylius.product.pre_create" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product.pre_update" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product_variant.pre_create" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product_variant.pre_update" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_create" method="uploadTaxonImage" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_update" method="uploadTaxonImage" />
            <tag name="kernel.event_listener" event="sylius.taxonomy.pre_create" method="uploadTaxonomyImage" />
            <tag name="kernel.event_listener" event="sylius.taxonomy.pre_update" method="uploadTaxonomyImage" />
        </service>

        <service id="sylius.image_uploader" class="%sylius.image_uploader.class%">
            <argument type="service">
                <service class="Gaufrette\Filesystem" factory-service="knp_gaufrette.filesystem_map" factory-method="get">
                    <argument>%sylius.uploader.filesystem%</argument>
                </service>
            </argument>
        </service>

        <service id="sylius.promotion_processor" class="%sylius.promotion_processor.class%">
            <argument type="service" id="sylius.repository.promotion" />
            <argument type="service" id="sylius.promotion_eligibility_checker" />
            <argument type="service" id="sylius.promotion_applicator" />
            <argument type="service" id="sylius.context.channel" />
        </service>

        <service id="sylius.promotion_rule_checker.nth_order" class="%sylius.promotion_rule_checker.nth_order.class%">
            <argument type="service" id="sylius.repository.order" />
            <tag name="sylius.promotion_rule_checker" type="nth_order" label="Nth order" />
        </service>
        <service id="sylius.promotion_rule_checker.customer_loyalty" class="%sylius.promotion_rule_checker.customer_loyalty.class%">
            <tag name="sylius.promotion_rule_checker" type="customer_loyalty" label="Customer loyalty" />
        </service>
        <service id="sylius.promotion_rule_checker.shipping_country" class="%sylius.promotion_rule_checker.shipping_country.class%">
            <tag name="sylius.promotion_rule_checker" type="shipping_country" label="Shipping country" />
        </service>
        <service id="sylius.promotion_rule_checker.taxonomy" class="%sylius.promotion_rule_checker.taxonomy.class%">
            <tag name="sylius.promotion_rule_checker" type="taxonomy" label="Taxonomy" />
        </service>
        <service id="sylius.promotion_rule_checker.contains_product" class="%sylius.promotion_rule_checker.contains_product.class%">
            <tag name="sylius.promotion_rule_checker" type="contains_product" label="Contains Product" />
        </service>
        <service id="sylius.promotion_rule_checker.customer_group" class="%sylius.promotion_rule_checker.customer_group.class%">
            <tag name="sylius.promotion_rule_checker" type="customer_group" label="User Group" />
        </service>
        <service id="sylius.promotion_action.fixed_discount" class="%sylius.promotion_action.fixed_discount.class%">
            <argument type="service" id="sylius.repository.adjustment" />
            <argument type="service" id="sylius.originator" />
            <tag name="sylius.promotion_action" type="fixed_discount" label="Fixed discount" />
        </service>
        <service id="sylius.promotion_action.percentage_discount" class="%sylius.promotion_action.percentage_discount.class%">
            <argument type="service" id="sylius.repository.adjustment" />
            <argument type="service" id="sylius.originator" />
            <tag name="sylius.promotion_action" type="percentage_discount" label="Percentage discount" />
        </service>
        <service id="sylius.promotion_action.shipping_discount" class="%sylius.promotion_action.shipping_discount.class%">
            <argument type="service" id="sylius.repository.adjustment" />
            <argument type="service" id="sylius.originator" />
            <tag name="sylius.promotion_action" type="shipping_discount" label="Shipping discount" />
        </service>
        <service id="sylius.promotion_action.add_product" class="%sylius.promotion_action.add_product.class%">
            <argument type="service" id="sylius.repository.order_item" />
            <argument type="service" id="sylius.repository.product_variant" />
            <tag name="sylius.promotion_action" type="add_product" label="Add product" />
        </service>

        <service id="sylius.promotion_eligibility_checker" class="%sylius.promotion_eligibility_checker.class%">
            <argument type="service" id="sylius.repository.order" />
            <argument type="service" id="sylius.registry.promotion_rule_checker" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="sylius.price_calculator.channel_based" class="%sylius.price_calculator.channel_based.class%">
            <tag name="sylius.price_calculator" type="channel_based" label="Channel based" />
        </service>

        <service id="sylius.price_calculator.group_based" class="%sylius.price_calculator.group_based.class%">
            <tag name="sylius.price_calculator" type="group_based" label="Customer group based" />
        </service>

        <service id="sylius.price_calculator.zone_based" class="%sylius.price_calculator.zone_based.class%">
            <tag name="sylius.price_calculator" type="zone_based" label="Customer zone based" />
        </service>

        <!-- money -->
        <service id="sylius.context.currency" class="%sylius.context.currency.class%">
            <argument /> <!-- Storage service name comes from config -->
            <argument type="service" id="sylius.context.customer" />
            <argument type="service" id="sylius.settings.manager" />
            <argument type="service" id="sylius.manager.customer" />
            <argument type="service" id="sylius.context.channel" />
        </service>

        <service id="sylius.context.channel" class="%sylius.context.channel.class%">
            <argument type="service" id="sylius.channel_resolver" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="50" />
        </service>

        <service id="sylius.channel_resolver" class="Sylius\Component\Core\Channel\ChannelResolver">
            <argument type="service" id="sylius.repository.channel" />
        </service>

        <service id="sylius.currency_provider" class="%sylius.currency_provider.class%">
            <argument type="service" id="sylius.context.channel" />
        </service>

        <service id="sylius.channel_aware_locale_provider" class="%sylius.channel_aware_locale_provider.class%">
            <argument type="service" id="sylius.context.channel" />
            <argument>%sylius.locale%</argument>
        </service>

        <service id="sylius.data_collector" class="%sylius.data_collector.class%" public="false">
            <tag name="data_collector" template="SyliusCoreBundle:Collector:sylius" id="sylius" priority="255" />
        </service>

        <service id="sylius.dynamic_router" class="%sylius.dynamic_router.class%">
            <argument type="service" id="router.request_context"/>
            <argument type="service" id="sylius.nested_matcher" />
            <argument type="service" id="sylius.route_generator" />
            <argument>%sylius.route_uri_filter_regexp%</argument>
            <argument type="service" id="event_dispatcher" on-invalid="ignore"/>
            <argument type="service" id="sylius.route_provider"/>
            <call method="addRouteEnhancer">
                <argument type="service" id="sylius.enhancer.controllers_by_class"/>
                <argument>100</argument>
            </call>
            <call method="addRouteEnhancer">
                <argument type="service" id="sylius.enhancer.sylius_by_class"/>
                <argument>100</argument>
            </call>
        </service>
        <service id="sylius.nested_matcher" class="%cmf_routing.nested_matcher.class%">
            <argument type="service" id="sylius.route_provider" />
            <argument type="service" id="cmf_routing.final_matcher"/>
        </service>
        <service id="sylius.route_generator" class="%sylius.generator.class%">
            <argument type="service" id="sylius.route_provider" />
            <argument type="service" id="logger" on-invalid="ignore" />
            <call method="setRouteConfig">
                <argument>%sylius.route_classes%</argument>
            </call>
        </service>
        <service id="sylius.route_provider" class="%sylius.route_provider.class%">
            <argument type="service" id="service_container"/>
            <argument type="service" id="doctrine"/>
            <argument>%sylius.route_classes%</argument>
            <call method="setRouteCollectionLimit"><argument>%sylius.route_collection_limit%</argument></call>
        </service>
        <service id="sylius.a2lix_locale_provider" class="%sylius.a2lix_locale_provider.class%">
            <argument type="service" id="sylius.locale_provider" />
            <argument type="service" id="sylius.context.locale" />
        </service>


        <service id="sylius.enhancer.controllers_by_class" class="%cmf_routing.enhancer.field_by_class.class%">
            <argument>_sylius_entity</argument>
            <argument>_controller</argument>
            <argument>%sylius.controller_by_classes%</argument>
        </service>
        <service id="sylius.enhancer.sylius_by_class" class="%cmf_routing.enhancer.field_by_class.class%">
            <argument>_sylius_entity</argument>
            <argument>_sylius</argument>
            <argument>%sylius.sylius_by_classes%</argument>
        </service>

        <!-- Data fetchers -->
        <service id="sylius.registry.report.data_fetcher" class="%sylius.registry.report.class%">
            <argument>Sylius\Component\Report\DataFetcher\DataFetcherInterface</argument>
        </service>
        <service id="sylius.report.data_fetcher" class="%sylius.report.data_fetcher.class%">
            <argument type="service" id="sylius.registry.report.data_fetcher" />
        </service>
        <service id="sylius.form.type.data_fetcher_choice" class="%sylius.form.type.data_fetcher_choice.class%">
            <argument>%sylius.report.data_fetchers%</argument>
            <tag name="form.type" alias="sylius_data_fetcher_choice" />
        </service>

        <service id="sylius.form.type.data_fetcher.user_registration" class="%sylius.form.type.data_fetcher.user_registration.class%">
            <tag name="form.type" alias="sylius_data_fetcher_user_registration" />
        </service>

        <service id="sylius.form.type.data_fetcher.sales_total" class="%sylius.form.type.data_fetcher.sales_total.class%">
            <tag name="form.type" alias="sylius_data_fetcher_sales_total" />
        </service>

        <service id="sylius.form.type.data_fetcher.number_of_orders" class="%sylius.form.type.data_fetcher.number_of_orders.class%">
            <tag name="form.type" alias="sylius_data_fetcher_number_of_orders" />
        </service>

        <service id="sylius.authorization_checker.toggleable" class="%sylius.authorization_checker.toggleable.class%">
            <argument type="service" id="sylius.authorization_checker.default" />
            <argument type="service" id="sylius.settings.manager" />
        </service>

        <service id="sylius.translation.locale_provider.contextual" class="%sylius.translation.locale_provider.contextual.class%">
            <argument type="service" id="sylius.context.locale" />
        </service>
    </services>

</container>
