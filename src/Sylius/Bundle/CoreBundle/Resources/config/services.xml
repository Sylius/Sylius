<?xml version="1.0" encoding="UTF-8"?>

<!--

 This file is part of the Sylius package.

 (c) Paweł Jędrzejewski

 For the full copyright and license information, please view the LICENSE
 file that was distributed with this source code.

-->

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
                               http://symfony.com/schema/dic/services/services-1.0.xsd">

    <imports>
        <import resource="services/api_form.xml" />
        <import resource="services/checkout.xml" />
        <import resource="services/email.xml" />
        <import resource="services/form.xml" />
        <import resource="services/metadata.xml" />
        <import resource="services/order.xml" />
        <import resource="services/pricing.xml" />
        <import resource="services/promotion.xml" />
        <import resource="services/report.xml" />
        <import resource="services/settings_schema.xml" />
        <import resource="services/sitemap.xml" />
        <import resource="services/state_machine.xml" />
        <import resource="services/taxation.xml" />
        <import resource="services/templating.xml" />
        <import resource="services/twig.xml" />
    </imports>

    <parameters>
        <parameter key="sylius.context.currency.class">Sylius\Bundle\CoreBundle\Context\CurrencyContext</parameter>
        <parameter key="sylius.context.channel.cached.class">Sylius\Component\Channel\Context\CachedPerRequestChannelContext</parameter>
        <parameter key="sylius.context.theme.channel_based.class">Sylius\Bundle\CoreBundle\Theme\ChannelBasedThemeContext</parameter>

        <parameter key="sylius.listener.cart_blamer.class">Sylius\Bundle\CoreBundle\EventListener\CartBlamerListener</parameter>
        <parameter key="sylius.listener.order_currency.class">Sylius\Bundle\CoreBundle\EventListener\OrderCurrencyListener</parameter>
        <parameter key="sylius.listener.order_inventory.class">Sylius\Bundle\CoreBundle\EventListener\OrderInventoryListener</parameter>
        <parameter key="sylius.listener.order_item_inventory.class">Sylius\Bundle\CoreBundle\EventListener\OrderItemInventoryListener</parameter>
        <parameter key="sylius.listener.order_state.class">Sylius\Bundle\CoreBundle\EventListener\OrderStateListener</parameter>
        <parameter key="sylius.listener.order_payment.class">Sylius\Bundle\CoreBundle\EventListener\OrderPaymentListener</parameter>
        <parameter key="sylius.listener.order_channel.class">Sylius\Bundle\CoreBundle\EventListener\OrderChannelListener</parameter>
        <parameter key="sylius.listener.order_promotion.class">Sylius\Bundle\CoreBundle\EventListener\OrderPromotionListener</parameter>
        <parameter key="sylius.listener.order_shipping.class">Sylius\Bundle\CoreBundle\EventListener\OrderShippingListener</parameter>
        <parameter key="sylius.listener.restricted_zone.class">Sylius\Bundle\CoreBundle\EventListener\RestrictedZoneListener</parameter>
        <parameter key="sylius.listener.purchase.class">Sylius\Bundle\CoreBundle\EventListener\PurchaseListener</parameter>
        <parameter key="sylius.listener.checkout_addressing.class">Sylius\Bundle\CoreBundle\EventListener\CheckoutAddressingListener</parameter>
        <parameter key="sylius.listener.insufficient_stock_exception.class">Sylius\Bundle\CoreBundle\EventListener\InsufficientStockExceptionListener</parameter>
        <parameter key="sylius.listener.image_upload.class">Sylius\Bundle\CoreBundle\EventListener\ImageUploadListener</parameter>
        <parameter key="sylius.listener.channel.class">Sylius\Bundle\CoreBundle\EventListener\ChannelDeletionListener</parameter>
        <parameter key="sylius.listener.customer_aware.class">Sylius\Bundle\CoreBundle\EventListener\CustomerAwareListener</parameter>
        <parameter key="sylius.listener.customer_reviews_delete.class">Sylius\Bundle\CoreBundle\EventListener\CustomerReviewsDeleteListener</parameter>
        <parameter key="sylius.listener.order_recalculation.class">Sylius\Bundle\CoreBundle\EventListener\OrderRecalculationListener</parameter>
        <parameter key="sylius.listener.user_cart_recalculation.class">Sylius\Bundle\CoreBundle\EventListener\UserCartRecalculationListener</parameter>

        <parameter key="sylius.image_uploader.class">Sylius\Component\Core\Uploader\ImageUploader</parameter>
        <parameter key="sylius.currency_context.class">Sylius\Bundle\CoreBundle\Context\CurrencyContext</parameter>
        <parameter key="sylius.currency_provider.class">Sylius\Component\Core\Currency\ChannelAwareCurrencyProvider</parameter>
        <parameter key="sylius.channel_aware_locale_provider.class">Sylius\Bundle\CoreBundle\Locale\ChannelAwareLocaleProvider</parameter>
        <parameter key="sylius.cart_item_resolver.default.class">Sylius\Bundle\CoreBundle\Cart\ItemResolver</parameter>
        <parameter key="sylius.checker.restricted_zone.class">Sylius\Bundle\CoreBundle\Checker\RestrictedZoneChecker</parameter>
        <parameter key="sylius.data_collector.class">Sylius\Bundle\CoreBundle\DataCollector\SyliusDataCollector</parameter>
        <parameter key="sylius.dynamic_router.class">Symfony\Cmf\Component\Routing\DynamicRouter</parameter>
        <parameter key="sylius.generator.class">Sylius\Bundle\CoreBundle\Routing\SyliusAwareGenerator</parameter>
        <parameter key="sylius.route_provider.class">Sylius\Bundle\CoreBundle\Routing\RouteProvider</parameter>

        <parameter key="sylius.validator.has_enabled_entity.class">Sylius\Bundle\CoreBundle\Validator\Constraints\HasEnabledEntityValidator</parameter>

        <parameter key="sylius.callback.complete_order.class">Sylius\Bundle\CoreBundle\StateMachineCallback\CompleteOrderCallback</parameter>

        <parameter key="sylius.provider.default_zone_provider.class">Sylius\Bundle\CoreBundle\Provider\DefaultTaxZoneProvider</parameter>
        <parameter key="sylius.integer_distributor.class">Sylius\Component\Core\Distributor\IntegerDistributor</parameter>

        <parameter key="sylius.authorization_checker.toggleable.class">Sylius\Bundle\CoreBundle\Authorization\ToggleableAuthorizationChecker</parameter>
        <parameter key="sylius.translation.locale_provider.contextual.class">Sylius\Bundle\CoreBundle\Provider\TranslationLocaleProvider</parameter>
        <parameter key="sylius.translation.locales_provider.class">Sylius\Bundle\CoreBundle\Provider\AvailableLocalesProvider</parameter>
        <parameter key="sylius.based_on_id_invoice_number_generator.class" >Sylius\Component\Core\Payment\IdBasedInvoiceNumberGenerator</parameter>
    </parameters>

    <services>
        <service id="sylius.context.channel.cached" class="%sylius.context.channel.cached.class%" decorates="sylius.context.channel" public="false">
            <argument type="service" id="sylius.context.channel.cached.inner" />
            <argument type="service" id="request_stack" />
        </service>

        <service id="sylius.context.theme.channel_based" class="%sylius.context.theme.channel_based.class%" public="false">
            <argument type="service" id="sylius.context.channel" />
        </service>

        <!-- cart -->
        <service id="sylius.cart_item_resolver.default" class="%sylius.cart_item_resolver.default.class%">
            <argument type="service" id="sylius.cart_provider" />
            <argument type="service" id="sylius.repository.product" />
            <argument type="service" id="form.factory" />
            <argument type="service" id="sylius.availability_checker" />
            <argument type="service" id="sylius.checker.restricted_zone" />
            <argument type="service" id="sylius.price_calculator" />
            <argument type="service" id="sylius.context.channel" />
        </service>

        <!-- checker -->
        <service id="sylius.checker.restricted_zone" class="%sylius.checker.restricted_zone.class%">
            <argument type="service" id="sylius.context.customer" />
            <argument type="service" id="sylius.zone_matcher" />
        </service>

        <service id="sylius.provider.default_zone_provider" class="%sylius.provider.default_zone_provider.class%">
            <argument type="service">
                <service
                        factory-service="sylius.settings.manager"
                        factory-method="loadSettings"
                        class="Sylius\Bundle\SettingsBundle\Model\Settings"
                        >
                    <argument>sylius_taxation</argument>
                </service>
            </argument>
        </service>
        <service id="sylius.integer_distributor" class="%sylius.integer_distributor.class%" />

        <service id="sylius.invoice_number_generator" class="%sylius.based_on_id_invoice_number_generator.class%" />

        <!-- listeners -->
        <service id="sylius.listener.cart_blamer" class="%sylius.listener.cart_blamer.class%">
            <argument type="service" id="sylius.manager.cart" />
            <argument type="service" id="sylius.cart_provider" />
            <tag name="kernel.event_listener" event="sylius.user.security.implicit_login" method="blame" />
            <tag name="kernel.event_listener" event="security.interactive_login" method="interactiveBlame" />
        </service>
        <service id="sylius.listener.order_inventory" class="%sylius.listener.order_inventory.class%">
            <argument type="service" id="sylius.order_processing.inventory_handler" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="holdInventoryUnits" />
            <tag name="kernel.event_listener" event="sylius.order_item.pre_create" method="resolveInventoryState" priority="-100" />
            <tag name="kernel.event_listener" event="sylius.order_item.pre_update" method="resolveInventoryState" priority="-100" />
        </service>
        <service id="sylius.listener.order_item_inventory" class="%sylius.listener.order_item_inventory.class%">
            <argument type="service" id="event_dispatcher" />
            <tag name="doctrine.event_listener" event="prePersist" />
            <tag name="doctrine.event_listener" event="onFlush" />
        </service>
        <service id="sylius.listener.order_state" class="%sylius.listener.order_state.class%">
            <argument type="service" id="sylius.order_processing.state_resolver" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="resolveOrderStates" priority="-100" />
            <tag name="kernel.event_listener" event="sylius.checkout.purchase.pre_complete" method="resolveOrderStates" priority="-100" />
            <tag name="kernel.event_listener" event="winzou.state_machine.post_transition" method="resolveOrderStatesOnTransition" priority="-100" />
        </service>
        <service id="sylius.listener.order_shipping" class="%sylius.listener.order_shipping.class%">
            <argument type="service" id="sylius.order_processing.shipment_processor" />
            <argument type="service" id="sylius.processor.shipment_processor" />
            <tag name="kernel.event_listener" event="sylius.checkout.shipping.initialize" method="processOrderShipments" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="updateShipmentStatesOnhold" />
        </service>
        <service id="sylius.listener.order_payment" class="%sylius.listener.order_payment.class%">
            <argument type="service" id="sylius.order_processing.payment_processor" />
            <tag name="kernel.event_listener" event="sylius.checkout.payment.initialize" method="createOrderPayment" />
            <tag name="kernel.event_listener" event="sylius.checkout.finalize.pre_complete" method="updateOrderPayment" />
        </service>
        <service id="sylius.listener.order_channel" class="%sylius.listener.order_channel.class%">
            <argument type="service" id="sylius.context.channel" />
            <tag name="kernel.event_listener" event="sylius.cart_change" method="processOrderChannel" />
        </service>
        <service id="sylius.listener.order_promotion" class="%sylius.listener.order_promotion.class%">
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <tag name="kernel.event_listener" event="sylius.promotion.coupon_invalid" method="handleCouponPromotion" />
            <tag name="kernel.event_listener" event="sylius.promotion.coupon_eligible" method="handleCouponPromotion" />
            <tag name="kernel.event_listener" event="sylius.promotion.coupon_not_eligible" method="handleCouponPromotion" />
        </service>
        <service id="sylius.listener.order_currency" class="%sylius.listener.order_currency.class%">
            <argument type="service" id="sylius.context.currency" />
            <tag name="kernel.event_listener" event="sylius.cart.initialize" method="processOrderCurrency" />
        </service>
        <service id="sylius.listener.customer_aware" class="%sylius.listener.customer_aware.class%">
            <argument type="service" id="sylius.context.customer" />
            <tag name="kernel.event_listener" event="sylius.checkout.security.pre_complete" method="setCustomer" priority="100" />
            <tag name="kernel.event_listener" event="sylius.cart.initialize" method="setCustomer" />
        </service>
        <service id="sylius.listener.restricted_zone" class="%sylius.listener.restricted_zone.class%">
            <argument type="service" id="sylius.checker.restricted_zone" />
            <argument type="service" id="sylius.cart_provider" />
            <argument type="service" id="sylius.manager.cart" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <tag name="kernel.event_listener" event="sylius.address.post_update" method="handleRestrictedZone" />
            <tag name="kernel.event_listener" event="sylius.checkout.addressing.complete" method="handleRestrictedZone" />
        </service>
        <service id="sylius.listener.purchase" class="%sylius.listener.purchase.class%">
            <argument type="service" id="sylius.cart_provider" />
            <argument type="service" id="router" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <argument>sylius_checkout_payment</argument>
            <tag name="kernel.event_listener" event="sylius.checkout.purchase.complete" method="abandonCart" />
            <tag name="kernel.event_listener" event="sylius.checkout.purchase.complete" method="addFlash" />
        </service>
        <service id="sylius.listener.checkout_addressing" class="%sylius.listener.checkout_addressing.class%">
            <tag name="kernel.event_listener" event="sylius.checkout.addressing.pre_complete" method="setCustomerAddressing" />
        </service>
        <service id="sylius.listener.insufficient_stock_exception" class="%sylius.listener.insufficient_stock_exception.class%">
            <argument type="service" id="router" />
            <argument type="service" id="session" />
            <argument type="service" id="translator" />
            <argument>sylius_cart_summary</argument>
            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" />
        </service>
        <service id="sylius.listener.channel" class="%sylius.listener.channel.class%">
            <argument type="service" id="sylius.repository.channel" />
            <tag name="kernel.event_listener" event="sylius.channel.pre_delete" method="onChannelPreDelete" />
        </service>
        <service id="sylius.listener.image_upload" class="%sylius.listener.image_upload.class%">
            <argument type="service" id="sylius.image_uploader" />
            <tag name="kernel.event_listener" event="sylius.product.pre_create" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product.pre_update" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product_variant.pre_create" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.product_variant.pre_update" method="uploadProductImage" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_create" method="uploadTaxonImage" />
            <tag name="kernel.event_listener" event="sylius.taxon.pre_update" method="uploadTaxonImage" />
        </service>
        <service id="sylius.listener.order_recalculation" class="%sylius.listener.order_recalculation.class%">
            <argument type="service" id="sylius.order_processing.order_recalculator" />
            <tag name="kernel.event_listener" event="sylius.cart_change" method="recalculateOrder"/>
        </service>
        <service id="sylius.listener.user_cart_recalculation" class="%sylius.listener.user_cart_recalculation.class%">
            <argument type="service" id="sylius.cart_provider" />
            <argument type="service" id="sylius.order_processing.order_recalculator" />
            <tag name="kernel.event_listener" event="sylius.user.security.implicit_login" method="recalculateCartWhileLogin" />
            <tag name="kernel.event_listener" event="security.interactive_login" method="recalculateCartWhileLogin" />
        </service>

        <service id="sylius.image_uploader" class="%sylius.image_uploader.class%">
            <argument type="service">
                <service class="Gaufrette\Filesystem" factory-service="knp_gaufrette.filesystem_map" factory-method="get">
                    <argument>%sylius.uploader.filesystem%</argument>
                </service>
            </argument>
        </service>

        <!-- money -->
        <service id="sylius.context.currency" class="%sylius.context.currency.class%">
            <argument /> <!-- Storage service name comes from config -->
            <argument type="service" id="sylius.context.customer" />
            <argument type="service" id="sylius.settings.manager" />
            <argument type="service" id="sylius.manager.customer" />
            <argument type="service" id="sylius.context.channel" />
        </service>

        <service id="sylius.currency_provider" class="%sylius.currency_provider.class%">
            <argument type="service" id="sylius.context.channel" />
            <argument type="service" id="sylius.repository.currency" />
        </service>

        <service id="sylius.channel_aware_locale_provider" class="%sylius.channel_aware_locale_provider.class%">
            <argument type="service" id="sylius.context.channel" />
            <argument>%sylius.locale%</argument>
        </service>

        <service id="sylius.data_collector" class="%sylius.data_collector.class%" public="false">
            <tag name="data_collector" template="SyliusCoreBundle:Collector:sylius" id="sylius" priority="255" />
        </service>

        <service id="sylius.dynamic_router" class="%sylius.dynamic_router.class%">
            <argument type="service" id="router.request_context"/>
            <argument type="service" id="sylius.nested_matcher" />
            <argument type="service" id="sylius.route_generator" />
            <argument>%sylius.route_uri_filter_regexp%</argument>
            <argument type="service" id="event_dispatcher" on-invalid="ignore"/>
            <argument type="service" id="sylius.route_provider"/>
            <call method="addRouteEnhancer">
                <argument type="service" id="sylius.enhancer.controllers_by_class"/>
                <argument>100</argument>
            </call>
            <call method="addRouteEnhancer">
                <argument type="service" id="sylius.enhancer.sylius_by_class"/>
                <argument>100</argument>
            </call>
        </service>
        <service id="sylius.nested_matcher" class="%cmf_routing.nested_matcher.class%">
            <argument type="service" id="sylius.route_provider" />
            <argument type="service" id="cmf_routing.final_matcher"/>
        </service>
        <service id="sylius.route_generator" class="%sylius.generator.class%">
            <argument type="service" id="sylius.route_provider" />
            <argument type="service" id="logger" on-invalid="ignore" />
            <call method="setRouteConfig">
                <argument>%sylius.route_classes%</argument>
            </call>
        </service>
        <service id="sylius.route_provider" class="%sylius.route_provider.class%">
            <argument type="service" id="service_container"/>
            <argument type="service" id="doctrine"/>
            <argument>%sylius.route_classes%</argument>
            <call method="setRouteCollectionLimit"><argument>%sylius.route_collection_limit%</argument></call>
        </service>

        <service id="sylius.enhancer.controllers_by_class" class="%cmf_routing.enhancer.field_by_class.class%">
            <argument>_sylius_entity</argument>
            <argument>_controller</argument>
            <argument>%sylius.controller_by_classes%</argument>
        </service>
        <service id="sylius.enhancer.sylius_by_class" class="%cmf_routing.enhancer.field_by_class.class%">
            <argument>_sylius_entity</argument>
            <argument>_sylius</argument>
            <argument>%sylius.sylius_by_classes%</argument>
        </service>

        <service id="sylius.authorization_checker.toggleable" class="%sylius.authorization_checker.toggleable.class%">
            <argument type="service" id="sylius.authorization_checker.default" />
            <argument type="service" id="sylius.settings.manager" />
        </service>

        <service id="sylius.translation.locales_provider" class="%sylius.translation.locales_provider.class%">
            <argument type="service" id="sylius.repository.locale" />
        </service>

        <service id="sylius.translation.locale_provider.contextual" class="%sylius.translation.locale_provider.contextual.class%">
            <argument type="service" id="sylius.context.locale" />
        </service>

        <service id="sylius.validator.has_enabled_entity" class="%sylius.validator.has_enabled_entity.class%">
            <argument type="service" id="doctrine" />
            <tag name="validator.constraint_validator" alias="sylius_has_enabled_entity" />
        </service>
    </services>

</container>
