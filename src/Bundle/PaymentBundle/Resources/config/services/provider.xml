<?xml version="1.0" encoding="UTF-8"?>

<!--

 This file is part of the Sylius package.

 (c) Sylius Sp. z o.o.

 For the full copyright and license information, please view the LICENSE
 file that was distributed with this source code.

-->

<container
    xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd"
>
    <services>
        <service id="sylius.provider.gateway_factory_name" class="Sylius\Bundle\PaymentBundle\Provider\GatewayFactoryNameProvider" />
        <service id="Sylius\Bundle\PaymentBundle\Provider\GatewayFactoryNameProviderInterface" alias="sylius.provider.gateway_factory_name" />

        <service id="sylius.provider.payment_request" class="Sylius\Bundle\PaymentBundle\Provider\PaymentRequestProvider">
            <argument type="service" id="sylius.repository.payment_request" />
        </service>
        <service id="Sylius\Bundle\PaymentBundle\Provider\PaymentRequestProviderInterface" alias="sylius.provider.payment_request" />

        <service id="sylius.provider.http_response.gateway_factory" class="Sylius\Bundle\PaymentBundle\Provider\GatewayFactoryHttpResponseProvider">
            <argument type="service" id="sylius.provider.gateway_factory_name" />
            <argument type="tagged_locator" tag="sylius.payment_request.provider.http_response" index-by="gateway-factory" />
        </service>
        <service id="sylius.provider.http_response.default" alias="sylius.provider.http_response.gateway_factory" />

        <service id="sylius.provider.default_action" class="Sylius\Bundle\PaymentBundle\Provider\DefaultActionProvider" />
        <service id="Sylius\Bundle\PaymentBundle\Provider\DefaultActionProviderInterface" alias="sylius.provider.default_action" />

        <service id="sylius.provider.default_payload" class="Sylius\Bundle\PaymentBundle\Provider\DefaultPayloadProvider" />
        <service id="Sylius\Bundle\PaymentBundle\Provider\DefaultPayloadProviderInterface" alias="sylius.provider.default_payload" />

        <service id="sylius.provider.http_response.offline" class="Sylius\Bundle\PaymentBundle\Provider\ActionsHttpResponseProvider">
            <argument type="tagged_locator" tag="sylius.provider.http_response.offline" index-by="action" />
            <tag name="sylius.payment_request.provider.http_response" gateway-factory="offline" />
        </service>

        <service id="sylius.provider.notify_payment" class="Sylius\Bundle\PaymentBundle\Provider\CompositeNotifyPaymentProvider">
            <argument type="tagged_iterator" tag="sylius.payment_request.payment_notify_provider" />
        </service>
        <service id="sylius.provider.notify_payment.composite" alias="sylius.provider.notify_payment" />
        <service id="Sylius\Bundle\PaymentBundle\Provider\NotifyPaymentProviderInterface" alias="sylius.provider.notify_payment" />

        <service id="sylius.provider.notify_response" class="Sylius\Bundle\PaymentBundle\Provider\NotifyResponseProvider" />
        <service id="Sylius\Bundle\PaymentBundle\Provider\NotifyResponseProviderInterface" alias="sylius.provider.notify_response" />
    </services>
</container>
