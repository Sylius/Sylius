<?xml version="1.0" encoding="UTF-8"?>

<!--

 This file is part of the Sylius package.

 (c) Sylius Sp. z o.o.

 For the full copyright and license information, please view the LICENSE
 file that was distributed with this source code.

-->

<container
    xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd"
>
    <imports>
        <import resource="services/*.xml" />
    </imports>

    <parameters>
        <parameter key="sylius.order_item_quantity_modifier.limit">9999</parameter>
        <parameter key="env(SYLIUS_UNSECURED_URLS)">yes</parameter>
        <parameter key="sylius.unsecured_urls">%env(bool:SYLIUS_UNSECURED_URLS)%</parameter>
        <parameter key="sylius.channel_pricing_log_entry.old_logs_removal_batch_size">100</parameter>
    </parameters>

    <services>
        <service id="sylius.distributor.integer" class="Sylius\Component\Core\Distributor\IntegerDistributor" />
        <service id="Sylius\Component\Core\Distributor\IntegerDistributorInterface" alias="sylius.distributor.integer" />

        <service id="sylius.distributor.proportional_integer" class="Sylius\Component\Core\Distributor\ProportionalIntegerDistributor" />
        <service id="Sylius\Component\Core\Distributor\ProportionalIntegerDistributorInterface" alias="sylius.distributor.proportional_integer" />

        <service id="sylius.distributor.minimum_price" class="Sylius\Component\Core\Distributor\MinimumPriceDistributor">
            <argument type="service" id="sylius.distributor.proportional_integer" />
        </service>
        <service id="Sylius\Component\Core\Distributor\MinimumPriceDistributorInterface" alias="sylius.distributor.minimum_price" />

        <service id="sylius.generator.invoice_number.id_based" class="Sylius\Component\Core\Payment\IdBasedInvoiceNumberGenerator" />
        <service id="Sylius\Component\Core\Payment\InvoiceNumberGeneratorInterface" alias="sylius.generator.invoice_number.id_based" />

        <service id="sylius.uploader.image" class="Sylius\Component\Core\Uploader\ImageUploader" public="true">
            <argument type="service" id="sylius.adapter.filesystem.default" />
            <argument type="service" id="sylius.generator.image_path" />
        </service>
        <service id="Sylius\Component\Core\Uploader\ImageUploaderInterface" alias="sylius.uploader.image" public="true" />

        <service id="sylius.adapter.filesystem.flysystem" class="Sylius\Component\Core\Filesystem\Adapter\FlysystemFilesystemAdapter">
            <argument type="service" id="sylius.storage" />
        </service>

        <service
            id="sylius.generator.image_path"
            class="Sylius\Component\Core\Generator\UploadedImagePathGenerator"
        />
        <service id="Sylius\Component\Core\Generator\ImagePathGeneratorInterface" alias="sylius.generator.image_path" />

        <service id="sylius.collector.core" class="Sylius\Bundle\CoreBundle\Collector\SyliusCollector">
            <argument type="service" id="sylius.context.shopper" />
            <argument>%kernel.bundles%</argument>
            <argument>%locale%</argument>
            <tag name="data_collector" template="@SyliusCore/Collector/sylius.html.twig" id="sylius_core" priority="-512" />
        </service>

        <service id="sylius.collector.cart" class="Sylius\Bundle\CoreBundle\Collector\CartCollector" public="false">
            <argument type="service" id="sylius.context.cart" />
            <tag name="data_collector" template="@SyliusCore/Collector/cart.html.twig" id="sylius_cart" priority="-512" />
        </service>

        <service id="sylius.resolver.shipping_methods.zones_and_channel_based" class="Sylius\Component\Core\Resolver\ZoneAndChannelBasedShippingMethodsResolver">
            <argument type="service" id="sylius.repository.shipping_method" />
            <argument type="service" id="sylius.matcher.zone" />
            <argument type="service" id="sylius.checker.shipping_method_eligibility" />
            <tag name="sylius.shipping_method_resolver" type="zones_and_channel_based" label="sylius.shipping_methods_resolver.zones_and_channel_based" priority="1" />
        </service>

        <service id="sylius.resolver.payment_methods.channel_based" class="Sylius\Component\Core\Resolver\ChannelBasedPaymentMethodsResolver">
            <argument type="service" id="sylius.repository.payment_method" />
            <tag name="sylius.payment_method_resolver" type="channel_based" label="sylius.payment_methods_resolver.channel_based" priority="1" />
        </service>

        <service id="sylius.resolver.payment_method.default" class="Sylius\Component\Core\Resolver\DefaultPaymentMethodResolver">
            <argument type="service" id="sylius.repository.payment_method" />
        </service>
        <service id="Sylius\Component\Payment\Resolver\DefaultPaymentMethodResolverInterface" alias="sylius.resolver.payment_method.default" />

        <service id="sylius.resolver.shipping_method.default" class="Sylius\Component\Core\Resolver\EligibleDefaultShippingMethodResolver">
            <argument type="service" id="sylius.repository.shipping_method" />
            <argument type="service" id="sylius.checker.shipping_method_eligibility" />
            <argument type="service" id="sylius.matcher.zone" />
        </service>

        <service id="sylius.resolver.taxation_address" class="Sylius\Component\Core\Resolver\TaxationAddressResolver">
            <argument>%sylius_core.taxation.shipping_address_based_taxation%</argument>
        </service>

        <service id="sylius.context.customer" class="Sylius\Bundle\CoreBundle\Context\CustomerContext" public="true">
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="security.authorization_checker" />
        </service>
        <service id="Sylius\Component\Customer\Context\CustomerContextInterface" alias="sylius.context.customer" public="true" />

        <service id="sylius.checker.inventory.order_item_availability" class="Sylius\Component\Core\Inventory\Checker\OrderItemAvailabilityChecker"/>
        <service id="Sylius\Component\Core\Inventory\Checker\OrderItemAvailabilityCheckerInterface" alias="sylius.checker.inventory.order_item_availability" />

        <service id="sylius.operator.inventory.order_inventory" class="Sylius\Component\Core\Inventory\Operator\OrderInventoryOperator" public="true" />
        <service id="Sylius\Component\Core\Inventory\Operator\OrderInventoryOperatorInterface" alias="sylius.operator.inventory.order_inventory" public="true" />

        <service id="sylius.custom_operator.inventory.order_inventory" class="Sylius\Bundle\CoreBundle\Doctrine\ORM\Inventory\Operator\OrderInventoryOperator" decorates="sylius.operator.inventory.order_inventory" public="false">
            <argument type="service" id="sylius.custom_operator.inventory.order_inventory.inner" />
            <argument type="service" id="sylius.manager.product_variant" />
        </service>

        <service id="sylius.custom_factory.order_item" class="Sylius\Component\Core\Factory\CartItemFactory" decorates="sylius.factory.order_item" decoration-priority="256">
            <argument type="service" id="sylius.custom_factory.order_item.inner" />
            <argument type="service" id="sylius.resolver.product_variant" />
            <argument type="service" id="sylius.modifier.order_item_quantity" />
        </service>
        <service id="sylius.factory.cart_item" alias="sylius.custom_factory.order_item" />
        <service id="sylius.custom_factory.address" class="Sylius\Component\Core\Factory\AddressFactory" decorates="sylius.factory.address" decoration-priority="256">
            <argument type="service" id="sylius.custom_factory.address.inner" />
        </service>

        <service id="sylius.custom_factory.channel" class="Sylius\Component\Core\Factory\ChannelFactory" decorates="sylius.factory.channel" decoration-priority="256">
            <argument type="service" id="sylius.custom_factory.channel.inner" />
            <argument>order_items_based</argument>
            <argument type="service" id="sylius.factory.channel_price_history_config" />
        </service>

        <service id="sylius.factory.customer_after_checkout" class="Sylius\Component\Core\Factory\CustomerAfterCheckoutFactory" public="true">
            <argument type="service" id="sylius.factory.customer" />
        </service>
        <service id="Sylius\Component\Core\Factory\CustomerAfterCheckoutFactoryInterface" alias="sylius.factory.customer_after_checkout" public="true" />

        <service id="sylius.twig.extension.product_variants_map" class="Sylius\Bundle\CoreBundle\Twig\ProductVariantsMapExtension">
            <argument type="service" id="sylius.provider.product_variant_map" />
            <tag name="twig.extension" />
        </service>

        <service id="sylius.twig.extension.checkout_steps" class="Sylius\Bundle\CoreBundle\Twig\CheckoutStepsExtension">
            <argument type="service" id="sylius.checker.order_payment_method_selection_requirement" />
            <argument type="service" id="sylius.checker.order_shipping_method_selection_requirement" />
            <tag name="twig.extension" />
        </service>

        <service id="sylius.assigner.order_token.unique_id_based" class="Sylius\Component\Core\TokenAssigner\UniqueIdBasedOrderTokenAssigner" public="true">
            <argument type="service" id="sylius.random_generator" />
            <argument>%sylius_core.order_token_length%</argument>
        </service>
        <service id="Sylius\Component\Core\TokenAssigner\OrderTokenAssignerInterface" alias="sylius.assigner.order_token.unique_id_based" public="true" />

        <service id="sylius.adder.customer.unique_address" class="Sylius\Component\Core\Customer\CustomerUniqueAddressAdder">
            <argument type="service" id="sylius.comparator.address" />
        </service>
        <service id="Sylius\Component\Core\Customer\CustomerAddressAdderInterface" alias="sylius.adder.customer.unique_address" />

        <service id="sylius.saver.customer.order_addresses" class="Sylius\Component\Core\Customer\CustomerOrderAddressesSaver" public="true">
            <argument type="service" id="sylius.adder.customer.unique_address" />
        </service>
        <service id="Sylius\Component\Core\Customer\OrderAddressesSaverInterface" alias="sylius.saver.customer.order_addresses" public="true" />

        <service id="sylius.modifier.cart.limiting_order_item_quantity" class="Sylius\Component\Core\Cart\Modifier\LimitingOrderItemQuantityModifier" decorates="sylius.modifier.order_item_quantity" decoration-priority="256">
            <argument type="service" id="sylius.modifier.cart.limiting_order_item_quantity.inner" />
            <argument>%sylius.order_item_quantity_modifier.limit%</argument>
        </service>

        <service id="sylius.assigner.customer_id" class="Sylius\Bundle\CoreBundle\Assigner\CustomerIpAssigner" />
        <service id="Sylius\Bundle\CoreBundle\Assigner\IpAssignerInterface" alias="sylius.assigner.customer_id" />

        <service
            id="sylius.calculator.product_variant_price"
            class="Sylius\Component\Core\Calculator\ProductVariantPriceCalculator"
        >
            <argument type="service" id="sylius.checker.product_variant_lowest_price_display" />
        </service>
        <service id="Sylius\Component\Core\Calculator\ProductVariantPricesCalculatorInterface" alias="sylius.calculator.product_variant_price" />

        <service id="sylius.section_resolver.uri_based" class="Sylius\Bundle\CoreBundle\SectionResolver\UriBasedSectionProvider">
            <argument type="service" id="request_stack" />
            <argument type="collection" />
        </service>
        <service id="Sylius\Bundle\CoreBundle\SectionResolver\SectionProviderInterface" alias="sylius.section_resolver.uri_based" />

        <service id="sylius.remover.reviewer_reviews" class="Sylius\Bundle\CoreBundle\Remover\ReviewerReviewsRemover">
            <argument type="service" id="sylius.repository.product_review" />
            <argument type="service" id="sylius.manager.product_review" />
            <argument type="service" id="sylius.updater.product_review.average_rating" />
        </service>
        <service id="Sylius\Bundle\CoreBundle\Remover\ReviewerReviewsRemoverInterface" alias="sylius.remover.reviewer_reviews" />

        <service id="sylius.remover.channel_pricing_log_entries" class="Sylius\Bundle\CoreBundle\PriceHistory\Remover\ChannelPricingLogEntriesRemover">
            <argument type="service" id="sylius.repository.channel_pricing_log_entry" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="clock" />
            <argument type="service" id="event_dispatcher" />
            <argument>%sylius.channel_pricing_log_entry.old_logs_removal_batch_size%</argument>
        </service>
        <service id="Sylius\Bundle\CoreBundle\PriceHistory\Remover\ChannelPricingLogEntriesRemoverInterface" alias="sylius.remover.channel_pricing_log_entries" />

        <service id="sylius.updater.unpaid_orders_state" class="Sylius\Component\Core\Updater\UnpaidOrdersStateUpdater">
            <argument type="service" id="sylius.repository.order" />
            <argument type="service" id="sylius_abstraction.state_machine" />
            <argument>%sylius_order.order_expiration_period%</argument>
            <argument type="service" id="logger" />
            <argument type="service" id="sylius.manager.order" />
        </service>
        <service id="Sylius\Component\Core\Updater\UnpaidOrdersStateUpdaterInterface" alias="sylius.updater.unpaid_orders_state" />

        <service id="sylius.provider.payment.order" class="Sylius\Component\Core\Payment\Provider\OrderPaymentProvider">
            <argument type="service" id="sylius.resolver.payment_method.default" />
            <argument type="service" id="sylius.factory.payment" />
            <argument type="service" id="sylius_abstraction.state_machine" />
        </service>
        <service id="Sylius\Component\Core\Payment\Provider\OrderPaymentProviderInterface" alias="sylius.provider.payment.order" />

        <service id="sylius.remover.payment.order" class="Sylius\Component\Core\Payment\Remover\OrderPaymentsRemover" />
        <service id="Sylius\Component\Core\Payment\Remover\OrderPaymentsRemoverInterface" alias="sylius.remover.payment.order" />

        <service id="sylius.provider.statistics.customer" class="Sylius\Component\Core\Customer\Statistics\CustomerStatisticsProvider">
            <argument type="service" id="sylius.repository.order" />
            <argument type="service" id="sylius.repository.channel" />
        </service>
        <service id="Sylius\Component\Core\Customer\Statistics\CustomerStatisticsProviderInterface" alias="sylius.provider.statistics.customer" />

        <service id="sylius.number_generator.sequential_order" class="Sylius\Bundle\CoreBundle\Order\NumberGenerator\SequentialOrderNumberGenerator">
            <argument type="service" id="sylius.repository.order_sequence" />
            <argument type="service" id="sylius.factory.order_sequence" />
            <argument type="service" id="sylius.manager.order_sequence" />
        </service>

        <service id="sylius.custom_resource_controller.resource_update_handler" class="Sylius\Bundle\CoreBundle\Doctrine\ORM\Handler\ResourceUpdateHandler" decorates="sylius.resource_controller.resource_update_handler">
            <argument type="service" id="sylius.custom_resource_controller.resource_update_handler.inner" />
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>

        <service id="sylius.custom_resource_controller.resource_delete_handler" class="Sylius\Bundle\CoreBundle\Doctrine\ORM\Handler\ResourceDeleteHandler" decorates="sylius.resource_controller.resource_delete_handler">
            <argument type="service" id="sylius.custom_resource_controller.resource_delete_handler.inner" />
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>

        <service id="sylius.setter.order.item_names" class="Sylius\Component\Core\Order\OrderItemNamesSetter" public="true" />
        <service id="Sylius\Component\Core\Order\OrderItemNamesSetterInterface" alias="sylius.setter.order.item_names" public="true" />

        <service id="sylius.grid_filter.resource_autocomplete" class="Sylius\Component\Core\Grid\Filter\ResourceAutocompleteFilter">
            <tag name="sylius.grid_filter" type="resource_autocomplete" form-type="Sylius\Bundle\CoreBundle\Form\Type\Grid\Filter\ResourceAutocompleteFilterType" />
        </service>

        <service id="sylius.resolver.cart.created_by_guest_flag" class="Sylius\Component\Core\Cart\Resolver\CreatedByGuestFlagResolver">
            <argument type="service" id="security.token_storage" />
        </service>
        <service id="Sylius\Component\Core\Cart\Resolver\CreatedByGuestFlagResolverInterface" alias="sylius.resolver.cart.created_by_guest_flag" />

        <service id="sylius.checker.order.promotions_integrity" class="Sylius\Bundle\CoreBundle\Order\Checker\OrderPromotionsIntegrityChecker">
            <argument type="service" id="sylius.order_processing.order_processor" />
        </service>
        <service id="Sylius\Bundle\CoreBundle\Order\Checker\OrderPromotionsIntegrityCheckerInterface" alias="sylius.checker.order.promotions_integrity" />

        <service id="sylius.resetter.user_password.admin" class="Sylius\Bundle\CoreBundle\Security\UserPasswordResetter">
            <argument type="service" id="sylius.repository.admin_user" />
            <argument type="service" id="Sylius\Component\User\Security\PasswordUpdaterInterface" />
            <argument type="string">%sylius.admin_user.token.password_reset.ttl%</argument>
        </service>

        <service id="sylius.resetter.user_password.shop" class="Sylius\Bundle\CoreBundle\Security\UserPasswordResetter">
            <argument type="service" id="sylius.repository.shop_user" />
            <argument type="service" id="Sylius\Component\User\Security\PasswordUpdaterInterface" />
            <argument type="string">%sylius.shop_user.token.password_reset.ttl%</argument>
        </service>

        <service id="sylius.resolver.customer" class="Sylius\Bundle\CoreBundle\Resolver\CustomerResolver" public="true">
            <argument type="service" id="sylius.factory.customer" />
            <argument type="service" id="sylius.provider.customer" />
        </service>
        <service id="Sylius\Bundle\CoreBundle\Resolver\CustomerResolverInterface" alias="sylius.resolver.customer" public="true" />

        <service id="sylius.registry.statistics.orders_totals_providers" class="Sylius\Component\Core\Statistics\Registry\OrdersTotalsProvidersRegistry">
            <argument type="tagged_iterator" index-by="type" tag="sylius.statistics.orders_totals_provider" />
        </service>
        <service id="Sylius\Component\Core\Statistics\Registry\OrdersTotalsProvidersRegistryInterface" alias="sylius.registry.statistics.orders_totals_providers" />

        <service id="sylius.positioner" class="Sylius\Component\Core\Positioner\Positioner" public="true" />
        <service id="Sylius\Component\Core\Positioner\PositionerInterface" alias="sylius.positioner" public="true" />
    </services>
</container>
