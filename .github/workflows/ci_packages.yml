name: Packages

on:
    workflow_dispatch: ~
    workflow_call: ~

jobs:
    test:
        runs-on: ubuntu-latest
        name: "PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}"
        timeout-minutes: 25

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1"]
                symfony: ["^5.4", "^6.0"]
        
        env:
            COMPOSER_ROOT_VERSION: "dev-master"
            SYMFONY_VERSION: "${{ matrix.symfony }}"

        steps:
            -
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    coverage: none

            -   name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:1.18.5"
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -   name: Get Composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -   name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: "${{ github.run_id }}-${{ runner.os }}-${{ hashFiles('composer.json') }}-symfony-${{ matrix.symfony }}-"
                    restore-keys: |
                        "${{ github.run_id }}-${{ runner.os }}-${{ hashFiles('composer.json') }}-symfony-${{ matrix.symfony }}-"
                    
            -   name: Install dependencies
                run: composer update --no-interaction --no-scripts

            -   name: "Run pipeline"
                run: find src/Sylius -mindepth 3 -maxdepth 3 -type f -name composer.json -exec dirname '{}' \; | sed -e 's/src\/Sylius\///g' | sort | jq  --raw-input . | jq --slurp . | jq -c . | xargs -0 vendor/bin/robo ci:packages
                
    test_with_swiftmailer:
        runs-on: ubuntu-latest
        name: "PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, Swiftmailer"
        timeout-minutes: 25

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1"]
                symfony: ["^5.4"]
        
        env:
            APP_ENV: "test_with_swiftmailer"
            COMPOSER_ROOT_VERSION: "dev-master"
            SYMFONY_VERSION: "${{ matrix.symfony }}"
            USE_SWIFTMAILER: "yes"
            PACKAGES: '["Bundle/CoreBundle", "Bundle/ApiBundle", "Bundle/AdminBundle"]'

        steps:
            -
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    coverage: none

            -   name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:1.18.5"
                    composer config extra.symfony.require "${{ matrix.symfony }}"
                    
            -   name: Get Composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -   name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: "${{ github.run_id }}-${{ runner.os }}-${{ hashFiles('composer.json') }}-symfony-${{ matrix.symfony }}-"
                    restore-keys: |
                        "${{ github.run_id }}-${{ runner.os }}-${{ hashFiles('composer.json') }}-symfony-${{ matrix.symfony }}-"

            -   name: Install dependencies
                run: composer update --no-interaction --no-scripts

            -   name: "Run pipeline"
                run: vendor/bin/robo ci:packages '${{ env.PACKAGES }}'

    notify-about-build-failure:
        needs: [test]
        if: failure() && (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'release')
        runs-on: ubuntu-latest
        name: "Notify about build failure"
        timeout-minutes: 5

        steps:
            -   name: "Process data"
                id: process-data
                shell: bash
                run: |
                    echo "branch=$(echo ${{ github.ref }} | sed 's/refs\/heads\///g' | sed 's/refs\/tags\///g')" >> $GITHUB_OUTPUT
                    echo "sha=$(echo ${{ github.sha }} | cut -c 1-12)" >> $GITHUB_OUTPUT

            -   name: "Notify on Slack"
                uses: edge/simple-slack-notify@master
                env:
                    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
                if: env.SLACK_WEBHOOK_URL != null
                with:
                    channel: "#builds"
                    username: "GitHub Actions"
                    text: |
                        *<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} | ${{ github.workflow }} #${{ github.run_number }} build on ${{ github.repository }} repository has failed for ${{ steps.process-data.outputs.branch }} branch.>*

                        _ _ _ _ _ _ _
                    color: "danger"
                    fields: |
                        [
                            { "title": "Repository", "value": "<https://github.com/${{ github.repository }} | ${{ github.repository }}>", "short": true },
                            { "title": "Action", "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} | ${{ github.workflow }} #${{ github.run_number }}>", "short": true },
                            { "title": "Reference", "value": "<https://github.com/${{ github.repository }}/tree/${{ steps.process-data.outputs.branch }} | ${{ steps.process-data.outputs.branch }}>", "short": true },
                            { "title": "Commit", "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }} | ${{ steps.process-data.outputs.sha }}>", "short": true },
                            { "title": "Event", "value": "${{ github.event_name }}", "short": true }
                        ]
